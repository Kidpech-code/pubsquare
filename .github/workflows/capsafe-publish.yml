name: capsafe-publish

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run pub publish --dry-run only (no actual publish)"
        type: boolean
        required: false
        default: true

jobs:
  publish:
    name: Publish capsafe to pub.dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/capsafe
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Pub get
        run: flutter pub get

      - name: Pub publish (dry-run or real)
        env:
          PUB_DEV_PUBLISH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_TOKEN }}
        run: |
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            flutter pub publish --dry-run
          else
            echo "$PUB_DEV_PUBLISH_TOKEN" > /tmp/pub-token.json
            flutter pub publish --force --credentials=/tmp/pub-token.json
            # Tag and push if publish succeeded
            version=$(grep '^version:' pubspec.yaml | awk '{print $2}')
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git tag "capsafe-v$version"
            git push origin "capsafe-v$version"
            # Bump patch version for next dev cycle
            IFS='.' read -r major minor patch <<< "${version//-/ }"
            next_patch=$((patch + 1))
            next_version="$major.$minor.$next_patch"
            sed -i.bak "s/^version: .*/version: $next_version/" pubspec.yaml
            rm pubspec.yaml.bak
            # Auto-update CHANGELOG.md if not present
            if ! grep -q "^## $next_version" CHANGELOG.md; then
              echo -e "\n## $next_version\n\n* Next patch release.\n" >> CHANGELOG.md
            fi
            git add pubspec.yaml CHANGELOG.md
            git commit -m "chore: bump version to $next_version and update CHANGELOG after publish"
            git push origin HEAD:main
          fi
        shell: bash
